; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    {3.3,3.4,pypy},
    {3.3,3.4,pypy}-nocover,
    report,
    docs

[testenv]
basepython =
    3.3: python3.3
    3.4: python3.4
    {clean,check,report,extension-coveralls,coveralls}: python3.4
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
deps =
    pytest
    pytest-capturelog
    pytest-cov
commands =
    {posargs:py.test --cov=src --cov-report=term-missing -vv}
usedevelop = true

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
whitelist_externals =
    rm
commands =
    rm -rf dist/docs || rmdir /S /Q dist\docs
    sphinx-build -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt

[testenv:check]
basepython = python3.4
deps =
    docutils
    check-manifest
    flake8
    readme
    pygments
usedevelop = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src

[testenv:coveralls]
deps =
    coveralls
usedevelop = true
commands =
    coverage combine
    coverage report
    coveralls
[testenv:report]
basepython = python3.4
commands =
    coverage combine
    coverage report
usedevelop = true
deps = coverage

[testenv:clean]
commands = coverage erase
usedevelop = true
deps = coverage

[testenv:3.3-nocover]
commands =
    {posargs:py.test -vv --ignore=src}
usedevelop = false

[testenv:3.4-nocover]
commands =
    {posargs:py.test -vv --ignore=src}
usedevelop = false

